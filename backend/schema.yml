openapi: 3.0.3
info:
  title: API SMS
  version: 1.0.0
  description: Descrição da sua API
paths:
  /api/answers/:
    get:
      operationId: api_answers_list
      tags:
      - Respostas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Answer'
          description: ''
    post:
      operationId: api_answers_create
      tags:
      - Respostas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /api/answers/{id}/:
    get:
      operationId: api_answers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - Respostas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    put:
      operationId: api_answers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - Respostas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: api_answers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - Respostas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswerRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    delete:
      operationId: api_answers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - Respostas
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/categories/:
    get:
      operationId: api_categories_list
      tags:
      - Categorias
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryQuestion'
          description: ''
    post:
      operationId: api_categories_create
      tags:
      - Categorias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryQuestionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQuestion'
          description: ''
  /api/categories/{id}/:
    get:
      operationId: api_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria de Pergunta.
        required: true
      tags:
      - Categorias
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQuestion'
          description: ''
    put:
      operationId: api_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria de Pergunta.
        required: true
      tags:
      - Categorias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategoryQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategoryQuestionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQuestion'
          description: ''
    patch:
      operationId: api_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria de Pergunta.
        required: true
      tags:
      - Categorias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategoryQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategoryQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategoryQuestionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryQuestion'
          description: ''
    delete:
      operationId: api_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Categoria de Pergunta.
        required: true
      tags:
      - Categorias
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/companies/:
    get:
      operationId: api_companies_list
      tags:
      - Empresas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
    post:
      operationId: api_companies_create
      tags:
      - Empresas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
  /api/companies/{id}/:
    get:
      operationId: api_companies_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Empresa.
        required: true
      tags:
      - Empresas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    put:
      operationId: api_companies_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Empresa.
        required: true
      tags:
      - Empresas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompanyRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    patch:
      operationId: api_companies_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Empresa.
        required: true
      tags:
      - Empresas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCompanyRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
    delete:
      operationId: api_companies_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Empresa.
        required: true
      tags:
      - Empresas
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/forms/:
    get:
      operationId: api_forms_list
      tags:
      - Formulários
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Form'
          description: ''
    post:
      operationId: api_forms_create
      tags:
      - Formulários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
  /api/forms/{id}/:
    get:
      operationId: api_forms_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - Formulários
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
    put:
      operationId: api_forms_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - Formulários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FormRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
    patch:
      operationId: api_forms_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - Formulários
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFormRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFormRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFormRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'
          description: ''
    delete:
      operationId: api_forms_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this form.
        required: true
      tags:
      - Formulários
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/questions/:
    get:
      operationId: api_questions_list
      tags:
      - Perguntas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
          description: ''
    post:
      operationId: api_questions_create
      tags:
      - Perguntas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/questions/{id}/:
    get:
      operationId: api_questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - Perguntas
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: api_questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - Perguntas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: api_questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - Perguntas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestionRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: api_questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this question.
        required: true
      tags:
      - Perguntas
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/subcategories/:
    get:
      operationId: api_subcategories_list
      tags:
      - Subcategorias
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Subcategory'
          description: ''
    post:
      operationId: api_subcategories_create
      tags:
      - Subcategorias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
  /api/subcategories/{id}/:
    get:
      operationId: api_subcategories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategoria.
        required: true
      tags:
      - Subcategorias
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
    put:
      operationId: api_subcategories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategoria.
        required: true
      tags:
      - Subcategorias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SubcategoryRequest'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
    patch:
      operationId: api_subcategories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategoria.
        required: true
      tags:
      - Subcategorias
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSubcategoryRequest'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subcategory'
          description: ''
    delete:
      operationId: api_subcategories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this Subcategoria.
        required: true
      tags:
      - Subcategorias
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/login/:
    post:
      operationId: api_users_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomLoginRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomLogin'
          description: ''
  /api/users/me/:
    get:
      operationId: api_users_me_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /api/users/token/:
    post:
      operationId: api_users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPairRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/users/token/refresh/:
    post:
      operationId: api_users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefreshRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        answer_respondent:
          $ref: '#/components/schemas/AnswerRespondentEnum'
        attachment_respondent:
          type: string
          format: uri
          nullable: true
        date_respondent:
          type: string
          format: date
          readOnly: true
        answer_evaluator:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AnswerEvaluatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        attachment_evaluator:
          type: string
          format: uri
          nullable: true
        date_evaluator:
          type: string
          format: date
          nullable: true
        question:
          type: integer
        evaluation:
          type: integer
        company:
          type: integer
      required:
      - answer_respondent
      - company
      - date_respondent
      - evaluation
      - id
      - question
    AnswerEvaluatorEnum:
      enum:
      - NA
      - C
      - NC
      - A
      type: string
      description: |-
        * `NA` - Não Aplicável
        * `C` - Conforme
        * `NC` - Não Conforme
        * `A` - Em Análise
    AnswerRequest:
      type: object
      properties:
        answer_respondent:
          $ref: '#/components/schemas/AnswerRespondentEnum'
        attachment_respondent:
          type: string
          format: binary
          nullable: true
        answer_evaluator:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AnswerEvaluatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        attachment_evaluator:
          type: string
          format: binary
          nullable: true
        date_evaluator:
          type: string
          format: date
          nullable: true
        question:
          type: integer
        evaluation:
          type: integer
        company:
          type: integer
      required:
      - answer_respondent
      - company
      - evaluation
      - question
    AnswerRespondentEnum:
      enum:
      - NA
      - C
      - NC
      - A
      type: string
      description: |-
        * `NA` - Não Aplicável
        * `C` - Conforme
        * `NC` - Não Conforme
        * `A` - Em Análise
    BlankEnum:
      enum:
      - ''
    CategoryQuestion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        weight:
          type: number
          format: double
        is_active:
          type: boolean
      required:
      - id
      - name
      - weight
    CategoryQuestionRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        weight:
          type: number
          format: double
        is_active:
          type: boolean
      required:
      - name
      - weight
    Company:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        cnpj:
          type: string
          maxLength: 18
        is_active:
          type: boolean
        user:
          type: integer
      required:
      - cnpj
      - id
      - name
      - user
    CompanyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        cnpj:
          type: string
          minLength: 1
          maxLength: 18
        is_active:
          type: boolean
        user:
          type: integer
      required:
      - cnpj
      - name
      - user
    CustomLogin:
      type: object
      properties:
        token:
          type: string
        user:
          $ref: '#/components/schemas/UserProfile'
      required:
      - token
      - user
    CustomLoginRequest:
      type: object
      properties:
        token:
          type: string
          minLength: 1
        user:
          $ref: '#/components/schemas/UserProfileRequest'
      required:
      - token
      - user
    Form:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        categories:
          type: array
          items:
            type: integer
      required:
      - categories
      - id
      - name
    FormRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
        categories:
          type: array
          items:
            type: integer
      required:
      - categories
      - name
    NullEnum:
      enum:
      - null
    PatchedAnswerRequest:
      type: object
      properties:
        answer_respondent:
          $ref: '#/components/schemas/AnswerRespondentEnum'
        attachment_respondent:
          type: string
          format: binary
          nullable: true
        answer_evaluator:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/AnswerEvaluatorEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        attachment_evaluator:
          type: string
          format: binary
          nullable: true
        date_evaluator:
          type: string
          format: date
          nullable: true
        question:
          type: integer
        evaluation:
          type: integer
        company:
          type: integer
    PatchedCategoryQuestionRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        weight:
          type: number
          format: double
        is_active:
          type: boolean
    PatchedCompanyRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        cnpj:
          type: string
          minLength: 1
          maxLength: 18
        is_active:
          type: boolean
        user:
          type: integer
    PatchedFormRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
        categories:
          type: array
          items:
            type: integer
    PatchedQuestionRequest:
      type: object
      properties:
        category:
          type: integer
        subcategory:
          type: integer
          nullable: true
        question:
          type: string
          minLength: 1
        is_active:
          type: boolean
    PatchedSubcategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
        category:
          type: integer
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        category:
          type: integer
        category_name:
          type: string
          readOnly: true
        subcategory_name:
          type: string
          readOnly: true
        subcategory:
          type: integer
          nullable: true
        question:
          type: string
        is_active:
          type: boolean
      required:
      - category
      - category_name
      - id
      - question
      - subcategory_name
    QuestionRequest:
      type: object
      properties:
        category:
          type: integer
        subcategory:
          type: integer
          nullable: true
        question:
          type: string
          minLength: 1
        is_active:
          type: boolean
      required:
      - category
      - question
    Subcategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        is_active:
          type: boolean
        category:
          type: integer
      required:
      - category
      - id
      - name
    SubcategoryRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
        category:
          type: integer
      required:
      - category
      - name
    TokenObtainPair:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - refresh
    TokenObtainPairRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
        password:
          type: string
          writeOnly: true
          minLength: 1
      required:
      - password
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenRefreshRequest:
      type: object
      properties:
        refresh:
          type: string
          minLength: 1
      required:
      - refresh
    UserProfile:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email
      required:
      - email
      - id
      - username
    UserProfileRequest:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
          minLength: 1
        email:
          type: string
          format: email
          minLength: 1
      required:
      - email
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
tags:
- name: Empresas
  description: Operações relacionadas a empresas
- name: Categorias
  description: Operações relacionadas a categorias de perguntas
- name: Perguntas
  description: Operações relacionadas a perguntas
- name: Formulários
  description: Operações relacionadas a formulários
- name: Respostas
  description: Operações relacionadas a respostas
